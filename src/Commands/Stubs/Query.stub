<?php declare(strict_types=1);

namespace DummyNamespace;

use Illuminate\Database\Eloquent\Builder;
use BayAreaWebPro\SearchableResource\AbstractQuery;
use BayAreaWebPro\SearchableResource\Contracts\ConditionalQuery;
use BayAreaWebPro\SearchableResource\Contracts\ValidatableQuery;
use BayAreaWebPro\SearchableResource\Contracts\ProvidesOptions;

class DummyClass extends AbstractQuery implements ConditionalQuery, ValidatableQuery, ProvidesOptions
{
    /**
     * Request Field
     */
    public string $field = 'search';

    /**
     * Database Attribute / Column
     */
    protected string $attribute = 'name';

    /**
     * InvokableQuery
     * @param Builder $builder
     */
    public function __invoke(Builder $builder): void
    {
        parent::__invoke($builder);
    }

    /**
     * ConditionalQuery
     * use contract to enable
     */
    public function getApplies(): bool
    {
        return parent::getApplies();
    }

    /**
     * ValidatableQuery
     * use contract to enable
     */
    public function getRules(): array
    {
        return [
            //$this->field => ['sometimes','nullable','etc'],
        ];
    }

    /**
     * ProvidesOptions
     * use contract to enable
     */
    public function getOptions(): array
    {
        return [
            //
        ];

        // Example: UnFormatted
        // return [
        //     $this->field => [
        //         'value1',
        //         'value2',
        //     ],
        // ];

        // Example: Formatted
        // return [
        //     $this->field => [
        //         [
        //             'label' => 'Value 1',
        //             'value' => 'value1',
        //         ],
        //         [
        //             'label' => 'Value 2',
        //             'value' => 'value2',
        //         ],
        //     ],
        // ];
    }
}
