<?php declare(strict_types=1);

namespace DummyNamespace;

use Illuminate\Database\Eloquent\Builder;
use BayAreaWebPro\SearchableResource\AbstractQuery;
use BayAreaWebPro\SearchableResource\Contracts\ConditionalQuery;
use BayAreaWebPro\SearchableResource\Contracts\ValidatableQuery;
use BayAreaWebPro\SearchableResource\Contracts\ProvidesOptions;

class DummyClass extends AbstractQuery implements ConditionalQuery, ValidatableQuery, ProvidesOptions
{
    /**
     * Request Field
     */
    protected string $field = 'search';

    /**
     * Database Attribute / Column
     */
    protected string $attribute = 'name';

    /**
     * InvokableQuery
     * @param Builder $builder
     */
    public function __invoke(Builder $builder): void
    {
        $builder->where($this->getAttribute(), $this->getValue());
    }

    /**
     * ConditionalQuery
     * use contract to enable
     */
    public function getApplies(): bool
    {
        return $this->request->filled($this->getField());
    }

    /**
     * ValidatableQuery
     * use contract to enable
     */
    public function getRules(): array
    {
        return [
            //$this->getField() => 'sometimes|nullable|string',
        ];
    }

    /**
     * ProvidesOptions
     * use contract to enable
     */
    public function getOptions(): array
    {
//        return [
//            $this->getField() => [
//                'value1',
//                'value2',
//            ],
//        ];

        return [
            $this->getField() => [
                [
                    'label' => 'Value 1',
                    'value' => 'value1',
                ],
                [
                    'label' => 'Value 2',
                    'value' => 'value2',
                ],
            ],
        ];
    }
}
